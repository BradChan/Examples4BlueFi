==========================
4.6 条件判断语句if
==========================

在之前的编程学习的过程中，Python解释器会对我们输入的每一行代码进行逐行执行。而在学习了if语句后，
我们让Python解释器根据判断条件选择性地执行代码。

由于if语句的判断条件与布尔类型有关(在4.1.2小节中有介绍)，因此，在介绍if语句之前，需要先了解布尔类型的真、假值的判断。

在Python解释器中，认为None、“”、[ ]、{ }、()、False为假。经过之前几个小节的学习，我们知道“”、[ ]、{ }、()分别代表空字符串、
空列表、空字典和空元组，而对象None代表含义就是空，因此Python中所有的空都被认为是假，而其它的任何值都为真。

4.6.1 if语句
================

请编写以下程序：

.. code-block::  C
  :linenos:

  >>> x = 1

  >>> if x in [1,2,3]:
  ... print(x)
  File "<stdin>", line 2
      print(x)
      ^
  IndentationError: expected an indented block

在输入第3行时，Python解释器报错，这是为什么？是因为“print(x)”语句前没有缩进。在Python中，以缩进的形式来表示代码之间的层次关系，
它的使用方式与其它编程语言(C、C++等)中的大括号“{ }”的方式是一样的。因此，由于“print(x)”从属于条件判断语句“if x in [1,2,3]:”，
在“print(x)”前需要加上缩进(按空格或按Tab键)。

.. code-block::  C
  :linenos:

  
  >>> x = 1

  >>> if x in [1,2,3]:
  ...   print(x)
  ...
  1

输入完“print(x)”后，连按两下回车键就可以得到执行结果。

条件判断语句if的逻辑为：当条件判断为真时，执行后续缩进的代码，为假，则跳过后续缩进的代码。if”和“:”中间的语句是判断条件，
该语句必定拥有一个布尔类型的返回值，用来返回真或假。

4.6.2 多条件判断语句
=====================

1. else
------------

2. elif
------------

4.6.3 逻辑运算符在条件判断语句中的应用
======================================


